import "./CreateContract.css";
import React, { useState } from "react";
import Web3 from "web3";

function CreateContract() {
  const [gasMessage, setGasMessage] = useState("");
  const [message, setMessage] = useState("");
  const [transactionMessage, setTransactionMessage] = useState("");

  const [from, setFrom] = useState("");
  const [data, setData] = useState("");
  const [gas, setGas] = useState("");

  const [customerId, setCustomerId] = useState("");

  // let transaction = {
  //   from: "0x8D6a2480Ef3a5b0297C3f3153085Fd1074848b6a",
  //   data: "0x6080604052600080546001600160401b031916905534801561002057600080fd5b50610be3806100306000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306661abd14610067578063506ce97d1461009957806385ec526d146100ae5780638d191d28146100ce578063b39ed843146100e1578063d39e50e1146100f4575b600080fd5b60005461007f90640100000000900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b6100ac6100a736600461085e565b610117565b005b6100c16100bc3660046108ac565b610179565b6040516100909190610914565b6100ac6100dc366004610983565b61038a565b6100ac6100ef3660046108ac565b610433565b6101076101023660046108ac565b610497565b60405161009094939291906109c0565b63ffffffff821660009081526001602052604090208151829190819061013d9082610a94565b50602082015160018201906101529082610a94565b50604082015160028201906101679082610a94565b50606082015181600301559050505050565b6101a46040518060800160405280606081526020016060815260200160608152602001600081525090565b63ffffffff8216600090815260016020526040908190208151608081019092528054829082906101d390610a0b565b80601f01602080910402602001604051908101604052809291908181526020018280546101ff90610a0b565b801561024c5780601f106102215761010080835404028352916020019161024c565b820191906000526020600020905b81548152906001019060200180831161022f57829003601f168201915b5050505050815260200160018201805461026590610a0b565b80601f016020809104026020016040519081016040528092919081815260200182805461029190610a0b565b80156102de5780601f106102b3576101008083540402835291602001916102de565b820191906000526020600020905b8154815290600101906020018083116102c157829003601f168201915b505050505081526020016002820180546102f790610a0b565b80601f016020809104026020016040519081016040528092919081815260200182805461032390610a0b565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b505050505081526020016003820154815250509050919050565b8060016000610397610657565b63ffffffff1681526020810191909152604001600020815181906103bb9082610a94565b50602082015160018201906103d09082610a94565b50604082015160028201906103e59082610a94565b506060919091015160039091015560008054640100000000900463ffffffff1690600461041183610b6a565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b63ffffffff81166000908152600160205260408120906104538282610693565b610461600183016000610693565b61046f600283016000610693565b5060006003919091018190558054640100000000900463ffffffff1690600461041183610b8d565b6001602052600090815260409020805481906104b290610a0b565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90610a0b565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b50505050509080600101805461054090610a0b565b80601f016020809104026020016040519081016040528092919081815260200182805461056c90610a0b565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050908060020180546105ce90610a0b565b80601f01602080910402602001604051908101604052809291908181526020018280546105fa90610a0b565b80156106475780601f1061061c57610100808354040283529160200191610647565b820191906000526020600020905b81548152906001019060200180831161062a57829003601f168201915b5050505050908060030154905084565b6000805463ffffffff16818061066c83610b6a565b82546101009290920a63ffffffff8181021990931691831602179091556000541692915050565b50805461069f90610a0b565b6000825580601f106106af575050565b601f0160209004906000526020600020908101906106cd91906106d0565b50565b5b808211156106e557600081556001016106d1565b5090565b803563ffffffff811681146106fd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261072957600080fd5b813567ffffffffffffffff8082111561074457610744610702565b604051601f8301601f19908116603f0116810190828211818310171561076c5761076c610702565b8160405283815286602085880101111561078557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000608082840312156107b757600080fd5b6040516080810167ffffffffffffffff82821081831117156107db576107db610702565b8160405282935084359150808211156107f357600080fd5b6107ff86838701610718565b8352602085013591508082111561081557600080fd5b61082186838701610718565b6020840152604085013591508082111561083a57600080fd5b5061084785828601610718565b604083015250606083013560608201525092915050565b6000806040838503121561087157600080fd5b61087a836106e9565b9150602083013567ffffffffffffffff81111561089657600080fd5b6108a2858286016107a5565b9150509250929050565b6000602082840312156108be57600080fd5b6108c7826106e9565b9392505050565b6000815180845260005b818110156108f4576020818501810151868301820152016108d8565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516080602084015261093060a08401826108ce565b90506020840151601f198085840301604086015261094e83836108ce565b925060408601519150808584030160608601525061096c82826108ce565b915050606084015160808401528091505092915050565b60006020828403121561099557600080fd5b813567ffffffffffffffff8111156109ac57600080fd5b6109b8848285016107a5565b949350505050565b6080815260006109d360808301876108ce565b82810360208401526109e581876108ce565b905082810360408401526109f981866108ce565b91505082606083015295945050505050565b600181811c90821680610a1f57607f821691505b602082108103610a3f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a8f57600081815260208120601f850160051c81016020861015610a6c5750805b601f850160051c820191505b81811015610a8b57828155600101610a78565b5050505b505050565b815167ffffffffffffffff811115610aae57610aae610702565b610ac281610abc8454610a0b565b84610a45565b602080601f831160018114610af75760008415610adf5750858301515b600019600386901b1c1916600185901b178555610a8b565b600085815260208120601f198616915b82811015610b2657888601518255948401946001909101908401610b07565b5085821015610b445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818103610b8357610b83610b54565b6001019392505050565b600063ffffffff821680610ba357610ba3610b54565b600019019291505056fea264697066735822122001ea25ff4b77be5e9cc3e7c4b58666359fbc3431b81e171b566f5d17fbb7b4fb64736f6c63430008130033",
  // };

  async function deployContract() {
    setTransactionMessage("");
    try {
      const web3 = new Web3("HTTP://192.168.100.104:7545");
      let receipt = await web3.eth.sendTransaction({
        from: from,
        data: data,
        gas: gas
      });
      console.log(receipt);
      setTransactionMessage("Transacao sucedida! TransactionHash = "+receipt.transactionHash);
    } catch (error) {
      console.log(error);
      setTransactionMessage(error.message);
    }
  }

  async function estimateGas() {
    setGasMessage("");
    try {
      const web3 = new Web3("HTTP://192.168.100.104:7545");
      let receipt = await web3.eth.estimateGas({
        from: from,
        data: data
      });
      setGas(numberToHex(receipt));
      console.log(receipt);
      setGasMessage(receipt);
    } catch (error) {
      console.log(error);
      setGasMessage(error.message);
    }
  }

   function numberToHex(number) {
    return "0x" + number.toString(16);
  }

  return (
    <div className="CreateContract">
      <header className="CreateContract-header">

        <h3>Fazer uma transaction utilizando a rede Ganache Local</h3>
        <h3>Definir o From</h3>
        <input type="text" value={from} onChange={e => setFrom(e.target.value)} />
        <h3>Definir o Data</h3>
        <input type="text" value={data} onChange={e => setData(e.target.value)} />

        <h3>Descobrir a Quantidade de Gas para a transaction</h3>
        <label>Descobrir</label>
        <input type="button" value="Deploy" onClick={estimateGas} />
        <p>{gasMessage}</p>

        <h3>Deploy do Primeiro Contrato</h3>
        <label>StoreCustomers</label>
        <input type="button" value="Deploy" onClick={deployContract} />
        <p>{transactionMessage}</p>
        <h1>Parabens voce postou o contrato.</h1>
      </header>
    </div>
  );
}

export default CreateContract;
